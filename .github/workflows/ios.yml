name: Publish to App Store Connect

on:
  push:
   branches:
     - main


jobs:
  ios_deploy_testflight:
    runs-on:  macos-13
    env:
      APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      APP_STORE_CONNECT_KEY_IDENTIFIER: ${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }}
      APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
      APP_STORE_APP_ID: ${{ secrets.APP_STORE_APP_ID }}
      DIST_CERTIFICATE: ${{ secrets.DIST_CERTIFICATE_BASE64 }}
      DIST_CERTIFICATE_PASSWORD: ${{ secrets.DIST_CERTIFICATE_PASSWORD }}
      PROVISIONING_PROFILE: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Flutter SDK
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        cache: true


    - name: Install dependencies and lint check
      run: |
        flutter clean
        flutter pub get
        dart analyze --fatal-infos

    - name: Install Codemagic CLI tools
      run: pip install codemagic-cli-tools

    - name: Set up keychain
      run: keychain initialize

    - name: Set up Provisioning Profiles
      run: |
          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
          mkdir -p "$PROFILES_HOME"
          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
          echo $PROVISIONING_PROFILE | base64 --decode > $PROFILE_PATH  

    - name: Set up Code signing settings
      run: |
        echo $DIST_CERTIFICATE_BASE64 | base64 --decode > certificate.p12
        keychain add-certificates --certificate certificate.p12 --certificate-password $DIST_CERTIFICATE_PASSWORD

    - name: Setup Code signing settings on Xcode project
      run: xcode-project use-profiles

    - name: Build ipa for Distribution
      run: |
        file='VERSION'
        fileData=`cat $file`
        IFS='.'
        read -a versionValue <<< "$fileData"
        buildNumber=$(( ${versionValue[0]} * 1000000 + ${versionValue[1]} * 10000 + ${{ github.run_number }} ))
        IFS=''
        buildName="${versionValue[0]}.${versionValue[1]}.${{ github.run_number }}"
        echo "Uploading build $buildName"
        flutter build ipa --release --build-number=$buildNumber --build-name=$buildName --export-options-plist=$HOME/export_options.plist
        
    - name: Upload to App Store Connect
      run: |
        APP_FILE=$(find $(pwd)  -name "*.ipa")
        app-store-connect publish \
        --path "$APP_FILE"
